/* TinyTB Shield (Studio-ready minimal)
 * Board: Seeeduino XIAO BLE (nRF52840)
 * PMW3610: SDIO=P0.02, SCLK=P0.03, NCS=P0.28, MOT=P0.29
 * Keys (direct): D0=P0.05, D1=P0.04, D2=P1.11, D3=P1.12
 */

#include <zephyr/dt-bindings/gpio/gpio.h>
#include <zephyr/dt-bindings/pinctrl/nrf-pinctrl.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>

/* ---------- root ---------- */
 / {
    compatible = "zmk,shield-tinytb";

    /* Studio 要件 */
    chosen {
        zmk,kscan = &kscan0;
        zmk,physical-layout = &tinytb_pl;
        zmk,keyboard-name = "TinyTB";
    };

    aliases {
        kscan = &kscan0;
        trackball = &pmw3610;
    };

    /* ---- 4 直配線キー (GPIO direct) ---- */
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-direct";
        label = "KSCAN";

        /* D0=P0.05, D1=P0.04, D2=P1.11, D3=P1.12 */
        input-gpios = <&gpio0  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>, /* D0 */
                      <&gpio0  4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>, /* D1 */
                      <&gpio1 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>, /* D2 */
                      <&gpio1 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* D3 */

        debounce-press-ms = <5>;
        debounce-release-ms = <5>;
    };

    /* ---- Studio 物理配列 (2x2 仮配置) ----
     * keys は「&key_physical_attrs + w h x y rot rx ry」
     */
    tinytb_pl: physical_layout {
        compatible = "zmk,physical-layout";
        display-name = "TinyTB 2x2";
        transform = <&default_transform>;

        /*          w   h    x    y   rot  rx  ry  */
        keys = <&key_physical_attrs  18  18    0    0    0    0   0>, /* D0 */
               <&key_physical_attrs  18  18   20    0    0    0   0>, /* D1 */
               <&key_physical_attrs  18  18    0   20    0    0   0>, /* D2 */
               <&key_physical_attrs  18  18   20   20    0    0   0>; /* D3 */
    };

    /* ---- キーマップ変換（1行×4列） ---- */
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <4>;
        rows = <1>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3)
        >;
    };
};

/* ---- SPI0 ピン: SCK=P0.03, SDIO=P0.02（MOSI/MISO 同ピン） ---- */
&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK,  0, 3)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 2)>,
                    <NRF_PSEL(SPIM_MISO, 0, 2)>;
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK,  0, 3)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 2)>,
                    <NRF_PSEL(SPIM_MISO, 0, 2)>;
            low-power-enable;
        };
    };
};

/* ---- SPI0 + PMW3610 ---- */

#include <zephyr/dt-bindings/input/input-event-codes.h>
&spi0 {
    status = "okay";
    compatible = "nordic, nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";

    /* Zephyr 3.5 の nrf-spim に spi-3wire プロパティは無い */
    cs-gpios = <&gpio0 28 GPIO_ACTIVE_LOW>; /* NCS */

    pmw3610: pmw3610@0 {
        status = "okay";
        compatible = "pixart,pmw3610";
        reg = <0>;                          /* CS index (cs-gpios[0]) */
        spi-max-frequency = <2000000>;
        irq-gpios = <&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* MOT */
        cpi = <600>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        force-awake;
         * // invert-x;
         * // invert-y;
    };
};
